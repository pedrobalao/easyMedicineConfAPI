# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'easypedconfapi:$(build.buildId)'
  dockerid: 'easymedicine.azurecr.io'
  appname: 'easypedconfapi'
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
- script: 
    echo $(DB_HOST)
- script: |
    echo 'HOST=0.0.0.0' > .env
    echo 'PORT=3333' >> .env
    echo 'NODE_ENV=production' >> .env
    echo 'APP_URL=http://${HOST}:${PORT}' >> .env
    echo 'CACHE_VIEWS=false' >> .env
    echo 'APP_KEY=$(APP_KEY)' >> .env
    echo 'DB_CONNECTION=mysql' >> .env
    echo 'DB_HOST=$(DB_HOST)' >> .env
    echo 'DB_PORT=$(DB_PORT)' >> .env
    echo 'DB_USER=$(DB_USER)' >> .env
    echo 'DB_PASSWORD=$(DB_PASSWORD)' >> .env
    echo 'DB_DATABASE=$(DB_DATABASE)' >> .env
    echo 'DB_SSL=true' >> .env
    echo 'SESSION_DRIVER=cookie' >> .env
    echo 'HASH_DRIVER=bcrypt' >> .env
- script: |
    npm install
    docker build -f Dockerfile -t $(dockerId)/$(imageName) .
    docker login $(dockerId) -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
    docker push $(dockerId)/$(imageName)
  displayName: 'docker build'